View(CO2_Analyzer)
summary(CO2_Analyzer)
str(CO2_Analyzer)
as.numeric(CO2_Analyzer)
as.numeric(CO2_Analyzer)
as.numeric(as.character(CO2_Analyzer))
str(CO2_Analyzer)
str(CO2_Analyzer_2)
class(CO2_Analyzer)
View(CO2_Analyzer)
View(CO2_Analyzer)
View(CO2_Analyzer)
CO2_Analyzer[!is.na(as.numeric(as.character(CO2_Analyzer$CO2Analyzer))),]
View(CO2_Analyzer)
CO2_2=CO2_Analyzer[!is.na(as.numeric(as.character(CO2_Analyzer$CO2Analyzer))),]
View(CO2_2)
View(CO2_2)
rm(list=ls())
library(readxl)
R_Injection_Gas <- read_excel("C:/Users/min.si/Desktop/CSS Y2/Data analysis/R testing/R_Injection_Gas.xlsx")
View(R_Injection_Gas)
IG<-R_Injection_Gas
CO2_Analyzer=select(IG,Month,Timestamp,CO2Analyzer)
CO2_2=CO2_Analyzer[!is.na(as.numeric(as.character(CO2_Analyzer$CO2Analyzer))),]
View(CO2_2)
View(CO2_2)
8760-5589
CO2_3<-lapply(CO2_Analyzer, function(x) as.numeric(as.character(x)))
CO2_3<-lapply(CO2_Analyzer$CO2Analyzer, function(x) as.numeric(as.character(x)))
view(CO2_3)
CO2_3[]<-lapply(CO2_Analyzer$CO2Analyzer, function(x) as.numeric(as.character(x)))
CO2_3=data.frame()
rm(CO2_3)
?lapply
library(readxl)
RIG <- read_excel("C:/Users/min.si/Desktop/CSS Y2/Data analysis/R testing/RIG.xlsx")
View(RIG)
library(tidyverse)
RIG[,3]<-as.numeric(as.character(RIG[,3]))
View()
View(IRG)
view(RIG)
View(RIG)
summary(RIG$CO2Analyzer)
rm(List=ls())
rm(list = ls())
library(readxl)
RIG <- read_excel("C:/Users/min.si/Desktop/CSS Y2/Data analysis/R testing/RIG.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(RIG)
summary(RIG$CO2Analyzer)
CO2Analyzer<-select(RIG,Month,Timestamp,CO2Analyzer)
CO2_Reading<-CO2Analyzer[!is.na(as.numeric(as.character(CO2Analyzer$CO2Analyzer))),]
View(CO2_Reading)
mutate(RIG,InjectionMeter=FlowRate_7_11 + FlowRate_8_19)
View(RIG)
RIG_1=mutate(RIG,InjectionMeter=FlowRate_7_11 + FlowRate_8_19)
View(RIG_1)
View(RIG_1)
summary(RIG_1$InjectionMeter)
summary(RIG_1$PipelineInlet)
sum(RIG_1$InjectionMeter)
sum(RIG_1$PipelineInlet)
?sum
sum(RIG_1$InjectionMeter,na.rm = TRUE)
sum(RIG_1$PipelineInlet,na.rm = TRUE)
as.date=RIG_1$Timestamp
rm(as.date)
library(readr)
Week_1_Quiz <- read_csv("C:/Users/min.si/OneDrive/R Project/Coursera/R Programming/Week 1 Quiz.csv")
View(Week_1_Quiz)
summary(Week_1_Quiz$Ozone)
Ozone <- Week_1_Quiz$Ozone
bad<-is.na(Ozone)
Ozone_2<-Ozone[!bad]
summary(Ozone_2)
library(readr)
Week_1_Quiz <- read_csv("C:/Users/min.si/OneDrive/R Project/Coursera/R Programming/Week 1 Quiz.csv")
View(Week_1_Quiz)
wk1<- Week_1_Quiz
library(tidyr)
View(wk1)
View(wk1)
library(tidyverse)
number18<-filter(wk1,Ozone>31 & Temp>90)
View(number18)
View(number18)
summary(number18)
number19<-select(wk1,Month =9)
number19<-filter(wk1,Month=9)
number19<-filter(wk1,Month==9)
summary(number19$Temp)
number19<-filter(wk1,Month==6)
summary(number19$Temp)
number20<-filter(wk1,Month==5)
summary(number20$Ozone)
library(readxl)
Aux_2 <- read_excel("C:/Users/min.si/Desktop/Aux 2.xlsx")
View(Aux_2)
library(tidyverse)
Aux2=Aux_2%>%
gather("0","1","2","3","4","5","6","7","8","9","10","11","12","13","14,"15","16","17","18","19","20","21","22","23", key="Time",Value ="NOx)
gather('0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23', key="Time",Value ="NOx)
Aux2=Aux_2%>%
)
)
Aux2=Aux_2%>%
ather('0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23', key="Time",Value ="NOx)
gather('0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23', key="Time",Value ="NOx)
Aux2=Aux_2%>%
gather('0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23', key="Time",Value ="NOx")
Aux2=Aux_2%>%
+ gather('0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23', key="Time",value ="NOx")
gather(Aux_2, '0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23', key="Time",value ="NOx")
Aux2=gather(Aux_2, '0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23', key="Time",value ="NOx")
View(Aux2)
View(Aux2)
?gdata
??gdata
add2<-function(x,y){
x*y
}
add2(2,3)
library(readxl)
R_Injection_Gas <- read_excel("C:/Users/min.si/OneDrive/R Project/R_Injection_Gas.xlsx")
View(R_Injection_Gas)
str(R_Injection_Gas)
R_Injection_Gas$CO2Analyzer=as.numeric(R_Injection_Gas$CO2Analyzer)
head(R_Injection_Gas)
str(R_Injection_Gas)
IG=R_Injection_Gas[ ,-c("CO2Analyzer","CO2Regression","CO2Lab")]
IG=R_Injection_Gas[ ,-("CO2Analyzer","CO2Regression","CO2Lab")]
IG=R_Injection_Gas[ ,-c(3,4,5)]
View(IG)
summary(IG$H2Analyzer)
IG2=na.omit(IG)
View(IG2)
View(IG2)
View(IG2$H2Analyzer)
summary(IG2$H2Analyzer)
library(readr)
Pre1 <- read_csv("C:/Users/min.si/OneDrive/R_Project/R coding traning/Pre1.csv",
col_types = cols(BSFC_Pre = col_number(),
Load_BHP = col_number(), RPM = col_number()))
View(Pre1)
library(scatterplot3d)
s3d <- scatterplot3d(Pre1,
angle=55, pch = 16,highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,draw_polygon = TRUE,lty.box = "solid")
library(scatterplot3d)
s3d <- scatterplot3d(Pre1,
angle=55, pch = 16,highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,draw_polygon = TRUE)
s3d <- scatterplot3d(Pre1,
angle=55, pch = 16,highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm)
s3d <- scatterplot3d(Pre1,
angle=55, pch = 16,highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,lty.box = "solid")
s3d <- scatterplot3d(Pre1,
angle=55, pch = 20,highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,lty.box = "solid")
s3d <- scatterplot3d(Pre1,
angle=55, pch = 16, highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,lty.box = "solid")
?scatterplot3d
s3d <- scatterplot3d(Pre1$RPM,Pre1$BSFC_Pre,Pre1$Load_BHP
angle=55, pch = 16, highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,lty.box = "solid")
s3d <- scatterplot3d(Pre1$RPM,Pre1$BSFC_Pre,Pre1$Load_BHP,
angle=55, pch = 16, highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,lty.box = "solid")
s3d <- scatterplot3d(Pre1,
angle=55, pch = 16, highlight.3d = TRUE)
my.lm <- lm(Pre1$BSFC_Pre~ Pre1$RPM + Pre1$Load_BHP)
g1=s3d$plane3d(my.lm,lty.box = "solid")
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=55, pch = 16, highlight.3d = TRUE,main="Residuals")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "solid")
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=55, pch = 16, highlight.3d = TRUE,main="Residuals")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "solid")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=55, pch = 16, highlight.3d = TRUE,
main="Residuals"
xlab="RPM"
ylab="BHP"
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "solid")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=55, pch = 16, highlight.3d = TRUE,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "solid")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=55, pch = 16, highlight.3d = TRUE,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dash")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=55, pch = 16, highlight.3d = TRUE,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dotted")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=70, pch = 16, highlight.3d = TRUE,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dotted")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=30, pch = 16, highlight.3d = TRUE,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dotted")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=60, pch = 16, highlight.3d = TRUE,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dotted")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=60, pch = 16,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dotted")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=60, pch = 16, box = FALSE
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dotted")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
L=Pre1$RPM
C=Pre1$Load_BHP
Y=Pre1$BSFC_Pre
s3d = scatterplot3d(L,C,Y,angle=60, pch = 16, box = FALSE,
main="Residuals",
xlab="RPM",
ylab="BHP",
zlab="BSFC(Pre)")
my.lm <- lm(Y ~ L + C)
s3d$plane3d(my.lm,lty.box = "dotted")
orig=s3d$xyz.convert(L,C,Y)
plane=s3d$xyz.convert(L,C,fitted(my.lm))
i.negpos = 1+(resid(my.lm)>0)
segments(orig$x,orig$y,plane$x,plane$y,col=c("blue","red")[i.negpos],
lty=(2:1)[i.negpos])
?vif
library(car)
?vif?
?vif
rm(list=ls())
library(readr)
Pre1 <- read_csv("C:/Users/min.si/OneDrive/R_Project/R coding traning/Pre1.csv",
col_types = cols(BSFC_Pre = col_number(),
Load_BHP = col_number(), RPM = col_number()))
View(Pre1)
library(car)
library(rgl)
x=Pre1$RPM
z=Pre1$Load_BHP
y=Pre1$BSFC_Pre
lm.fit <- lm(y ~x+z,data=Pre1,fit="linear")
lm.fit
vif(lm.fit)
library(car)
library(rgl)
x=Pre1$RPM
z=Pre1$Load_BHP
y=Pre1$BSFC_Pre
lm.fit <- lm(y ~x+z,data=Pre1)
lm.fit
vif(lm.fit)
summary(lm.fit)
vif(lm.fit)
scatter3d(y~x+z,data=Pre1,fit="linear")
?scatter3d
scatter3d(y~x+z,data=Pre1,fit="linear",
xlab = RPM,
ylab = BSFC_Pre,
zlab = BHP
)
scatter3d(y~x+z,data=Pre1,fit="linear",
xlab = "RPM",
ylab = "BSFC_Pre",
zlab = "BHP"
)
3d<-scatter3d(y~x+z,data=Pre1,fit="linear",
xlab = "RPM",
ylab = "BSFC_Pre",
zlab = "BHP"
)
summary(3d)
scatter3d(y~x+z,data=Pre1,fit="smooth",
xlab = "RPM",
ylab = "BSFC_Pre",
zlab = "BHP"
)
scatter3d(y~x+z,data=Pre1,fit="quadratic",
xlab = "RPM",
ylab = "BSFC_Pre",
zlab = "BHP"
)
scatter3d(y~x+z,data=Pre1,fit="additive",
xlab = "RPM",
ylab = "BSFC_Pre",
zlab = "BHP"
)
scatter3d(y~x+z,data=Pre1,fit="linear",
xlab = "RPM",
ylab = "BSFC_Pre",
zlab = "BHP"
)
rm(list=ls())
library(datasets)
data(iris)
?iris
library(datasets)
data(iris)
?iris
View(iris)
library(tidyverse)
virginica <- filter(iris,virginica)
virginica <- select(iris,virginica)
virginica <- filter(iris,Species = virginica)
virginica <- filter(iris,Species == virginica)
virginica <- filter(iris,Species == "virginica")
View(virginica)
View(virginica)
mean(virginica$Sepal.Length)
apply(iris[,1:4],2,mean)
colMeans(iris)
?colMeans
x <-iris[,1:4]
colMeans(x)
data(mtcars)
View(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?tapply
?gl
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
?with
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
debug(ls)
new <- tapply(mtcars$hp, mtcars$cyl, mean)
round(abs(new[3]-new[1]))
Q
q
q
q
!
)
cc
nn
n
rm(list=ls())
rm(list=ls())
gc()
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(AppliedPredictiveModeling)
data(twoClassData)
View(predictors)
str(predictors)
str(classes)
library(caret)
set.seed(1)
trainingRows <- createDataPartition(classes, p = .80, list = FALSE)
head(trainingRows)
View(trainingRows)
trainPredictors <- predictors[trainingRows,]
trainClasses <- classes[trainingRows]
testPredictors <- predictors[-trainingRows,]
testClasses <- class[-trainingRows]
setwd("C:/Users/min.si/OneDrive/R_Project/AppliedPredictiveModeling/Chapter4")
str(trainPredictors)
str(testPredictors)
set.seed(1)
repeatedSplits <- createDataPartition(trainClasses, p=.80,times = 3)
str(repeatedSplits)
set.seed(1)
cvSplits <- createFolds(trainClasses,k=10,returnTrain = TRUE)
str(cvSplits)
fold1 <- cvSplits[[1]]
cvPredictor1 <- trainPredictors[fold1,]
str(cvPredictor1)
cvClasses1 <- trainClasses[fold1]
nrow(trainPredictors)
nrow(cvPredictor1)
trainPredictors <- as.matrix(trainPredictors)
knnfit <- knn3(x=trainPredictors, y - trainClasses, k = 5)
knnfit <- knn3(x=trainPredictors, y =trainClasses, k = 5)
knnfit
testPredictions <- predict(knnFit, newdata = testPredictors, type = "class")
testPredictions <- predict(knnfit, newdata = testPredictors, type = "class")
head(testPredictions)
str(testPredictions)
